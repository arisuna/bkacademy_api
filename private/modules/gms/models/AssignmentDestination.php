<?php

namespace Reloday\Gms\Models;

use Reloday\Application\Lib\CacheHelper;

class AssignmentDestination extends \Reloday\Application\Models\AssignmentDestinationExt
{
    /**
     * initialize
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->belongsTo('destination_country_id', 'Reloday\Gms\Models\Country', 'id', [
            'alias' => 'DestinationCountry',
            'cache' => [
                'key' => 'COUNTRY_' . $this->getDestinationCountryId(),
                'lifetime' => CacheHelper::__TIME_6_MONTHS
            ]
        ]);

        $this->belongsTo('hr_assignment_owner_id', 'Reloday\Gms\Models\UserProfile', 'id', [
            'alias' => 'HrOwnerProfile'
        ]);

        $this->belongsTo('id', 'Reloday\Gms\Models\Assignment', 'id', [
            'alias' => 'Assignment'
        ]);
    }

    /**
     * @param $customData
     * @param $assignmentModel
     */
    public function createSingleOne($customData, $assignmentModel)
    {
        if (!method_exists($assignmentModel, 'getId') || !is_object($assignmentModel)) {
            return ['success' => false];
        }
        $this->setData($customData);
        $this->setId($assignmentModel->getId());

        if ($assignmentModel->getDestinationCity() != '') {
            $this->setDestinationCity($assignmentModel->getDestinationCity());
        }
        if ($assignmentModel->getDestinationCountryId() > 0) {
            $this->setDestinationCountryId($assignmentModel->getDestinationCountryId());
        }
        if ($assignmentModel->getDestinationCityGeonameid() > 0) {
            $this->setDestinationCityGeonameid($assignmentModel->getDestinationCityGeonameid());
        }

        return $this->__quickCreate();
    }

    /**
     * @param $customData
     * @param $assignmentModel
     */
    public function updateSingleOne($customData, $assignmentModel)
    {
        if (!method_exists($assignmentModel, 'getId') || !is_object($assignmentModel)) {
            return ['success' => false];
        }
        if ($assignmentModel->getId() != $this->getId()) {
            return ['success' => false];
        }

        $this->setData($customData);

        if ($assignmentModel->getDestinationCity() != '') {
            $this->setDestinationCity($assignmentModel->getDestinationCity());
        }
        if ($assignmentModel->getDestinationCountryId() > 0) {
            $this->setDestinationCountryId($assignmentModel->getDestinationCountryId());
        }
        if ($assignmentModel->getDestinationCityGeonameid() > 0) {
            $this->setDestinationCityGeonameid($assignmentModel->getDestinationCityGeonameid());
        }

        return $this->__quickUpdate();
    }
}
